<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xx.mapper.TrafficInfoMapper">
  <resultMap id="BaseResultMap" type="com.xx.domain.TrafficInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="passenger_capacity" jdbcType="INTEGER" property="passengerCapacity" />
    <result column="car_type" jdbcType="VARCHAR" property="carType" />
    <result column="buy_date" jdbcType="DATE" property="buyDate" />
    <result column="mileage" jdbcType="INTEGER" property="mileage" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="business_scope" jdbcType="VARCHAR" property="businessScope" />
    <result column="operate_number" jdbcType="VARCHAR" property="operateNumber" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="traffic_level" jdbcType="VARCHAR" property="trafficLevel" />
    <result column="traffic_owner" jdbcType="VARCHAR" property="trafficOwner" />
    <result column="owner_tel" jdbcType="VARCHAR" property="ownerTel" />
    <result column="driving_license" jdbcType="DATE" property="drivingLicense" />
    <result column="trading_license" jdbcType="DATE" property="tradingLicense" />
    <result column="operating_license" jdbcType="DATE" property="operatingLicense" />
    <result column="approval_license" jdbcType="DATE" property="approvalLicense" />
    <result column="evaluation_license" jdbcType="DATE" property="evaluationLicense" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <select id="selectList" resultMap="BaseResultMap">
    select *  from  traffic_info
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, brand, model, color, passenger_capacity, car_type, buy_date, mileage, driver_id, 
    car_number, business_scope, operate_number, sign, traffic_level, traffic_owner, owner_tel, 
    driving_license, trading_license, operating_license, approval_license, evaluation_license, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.xx.domain.TrafficInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from traffic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from traffic_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from traffic_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xx.domain.TrafficInfoExample">
    delete from traffic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xx.domain.TrafficInfo" useGeneratedKeys="true">
    insert into traffic_info (brand, model, color, 
      passenger_capacity, car_type, buy_date, 
      mileage, driver_id, car_number, 
      business_scope, operate_number, sign, 
      traffic_level, traffic_owner, owner_tel, 
      driving_license, trading_license, operating_license, 
      approval_license, evaluation_license, remark
      )
    values (#{brand,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{passengerCapacity,jdbcType=INTEGER}, #{carType,jdbcType=VARCHAR}, #{buyDate,jdbcType=DATE}, 
      #{mileage,jdbcType=INTEGER}, #{driverId,jdbcType=INTEGER}, #{carNumber,jdbcType=VARCHAR}, 
      #{businessScope,jdbcType=VARCHAR}, #{operateNumber,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, 
      #{trafficLevel,jdbcType=VARCHAR}, #{trafficOwner,jdbcType=VARCHAR}, #{ownerTel,jdbcType=VARCHAR}, 
      #{drivingLicense,jdbcType=DATE}, #{tradingLicense,jdbcType=DATE}, #{operatingLicense,jdbcType=DATE}, 
      #{approvalLicense,jdbcType=DATE}, #{evaluationLicense,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xx.domain.TrafficInfo" useGeneratedKeys="true">
    insert into traffic_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brand != null">
        brand,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="passengerCapacity != null">
        passenger_capacity,
      </if>
      <if test="carType != null">
        car_type,
      </if>
      <if test="buyDate != null">
        buy_date,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="businessScope != null">
        business_scope,
      </if>
      <if test="operateNumber != null">
        operate_number,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="trafficLevel != null">
        traffic_level,
      </if>
      <if test="trafficOwner != null">
        traffic_owner,
      </if>
      <if test="ownerTel != null">
        owner_tel,
      </if>
      <if test="drivingLicense != null">
        driving_license,
      </if>
      <if test="tradingLicense != null">
        trading_license,
      </if>
      <if test="operatingLicense != null">
        operating_license,
      </if>
      <if test="approvalLicense != null">
        approval_license,
      </if>
      <if test="evaluationLicense != null">
        evaluation_license,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="passengerCapacity != null">
        #{passengerCapacity,jdbcType=INTEGER},
      </if>
      <if test="carType != null">
        #{carType,jdbcType=VARCHAR},
      </if>
      <if test="buyDate != null">
        #{buyDate,jdbcType=DATE},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null">
        #{businessScope,jdbcType=VARCHAR},
      </if>
      <if test="operateNumber != null">
        #{operateNumber,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="trafficLevel != null">
        #{trafficLevel,jdbcType=VARCHAR},
      </if>
      <if test="trafficOwner != null">
        #{trafficOwner,jdbcType=VARCHAR},
      </if>
      <if test="ownerTel != null">
        #{ownerTel,jdbcType=VARCHAR},
      </if>
      <if test="drivingLicense != null">
        #{drivingLicense,jdbcType=DATE},
      </if>
      <if test="tradingLicense != null">
        #{tradingLicense,jdbcType=DATE},
      </if>
      <if test="operatingLicense != null">
        #{operatingLicense,jdbcType=DATE},
      </if>
      <if test="approvalLicense != null">
        #{approvalLicense,jdbcType=DATE},
      </if>
      <if test="evaluationLicense != null">
        #{evaluationLicense,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xx.domain.TrafficInfoExample" resultType="java.lang.Long">
    select count(*) from traffic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update traffic_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.passengerCapacity != null">
        passenger_capacity = #{record.passengerCapacity,jdbcType=INTEGER},
      </if>
      <if test="record.carType != null">
        car_type = #{record.carType,jdbcType=VARCHAR},
      </if>
      <if test="record.buyDate != null">
        buy_date = #{record.buyDate,jdbcType=DATE},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=INTEGER},
      </if>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.carNumber != null">
        car_number = #{record.carNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.businessScope != null">
        business_scope = #{record.businessScope,jdbcType=VARCHAR},
      </if>
      <if test="record.operateNumber != null">
        operate_number = #{record.operateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficLevel != null">
        traffic_level = #{record.trafficLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficOwner != null">
        traffic_owner = #{record.trafficOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerTel != null">
        owner_tel = #{record.ownerTel,jdbcType=VARCHAR},
      </if>
      <if test="record.drivingLicense != null">
        driving_license = #{record.drivingLicense,jdbcType=DATE},
      </if>
      <if test="record.tradingLicense != null">
        trading_license = #{record.tradingLicense,jdbcType=DATE},
      </if>
      <if test="record.operatingLicense != null">
        operating_license = #{record.operatingLicense,jdbcType=DATE},
      </if>
      <if test="record.approvalLicense != null">
        approval_license = #{record.approvalLicense,jdbcType=DATE},
      </if>
      <if test="record.evaluationLicense != null">
        evaluation_license = #{record.evaluationLicense,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update traffic_info
    set id = #{record.id,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      passenger_capacity = #{record.passengerCapacity,jdbcType=INTEGER},
      car_type = #{record.carType,jdbcType=VARCHAR},
      buy_date = #{record.buyDate,jdbcType=DATE},
      mileage = #{record.mileage,jdbcType=INTEGER},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      car_number = #{record.carNumber,jdbcType=VARCHAR},
      business_scope = #{record.businessScope,jdbcType=VARCHAR},
      operate_number = #{record.operateNumber,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=VARCHAR},
      traffic_level = #{record.trafficLevel,jdbcType=VARCHAR},
      traffic_owner = #{record.trafficOwner,jdbcType=VARCHAR},
      owner_tel = #{record.ownerTel,jdbcType=VARCHAR},
      driving_license = #{record.drivingLicense,jdbcType=DATE},
      trading_license = #{record.tradingLicense,jdbcType=DATE},
      operating_license = #{record.operatingLicense,jdbcType=DATE},
      approval_license = #{record.approvalLicense,jdbcType=DATE},
      evaluation_license = #{record.evaluationLicense,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xx.domain.TrafficInfo">
    update traffic_info
    <set>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="passengerCapacity != null">
        passenger_capacity = #{passengerCapacity,jdbcType=INTEGER},
      </if>
      <if test="carType != null">
        car_type = #{carType,jdbcType=VARCHAR},
      </if>
      <if test="buyDate != null">
        buy_date = #{buyDate,jdbcType=DATE},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="businessScope != null">
        business_scope = #{businessScope,jdbcType=VARCHAR},
      </if>
      <if test="operateNumber != null">
        operate_number = #{operateNumber,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="trafficLevel != null">
        traffic_level = #{trafficLevel,jdbcType=VARCHAR},
      </if>
      <if test="trafficOwner != null">
        traffic_owner = #{trafficOwner,jdbcType=VARCHAR},
      </if>
      <if test="ownerTel != null">
        owner_tel = #{ownerTel,jdbcType=VARCHAR},
      </if>
      <if test="drivingLicense != null">
        driving_license = #{drivingLicense,jdbcType=DATE},
      </if>
      <if test="tradingLicense != null">
        trading_license = #{tradingLicense,jdbcType=DATE},
      </if>
      <if test="operatingLicense != null">
        operating_license = #{operatingLicense,jdbcType=DATE},
      </if>
      <if test="approvalLicense != null">
        approval_license = #{approvalLicense,jdbcType=DATE},
      </if>
      <if test="evaluationLicense != null">
        evaluation_license = #{evaluationLicense,jdbcType=DATE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xx.domain.TrafficInfo">
    update traffic_info
    set brand = #{brand,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      passenger_capacity = #{passengerCapacity,jdbcType=INTEGER},
      car_type = #{carType,jdbcType=VARCHAR},
      buy_date = #{buyDate,jdbcType=DATE},
      mileage = #{mileage,jdbcType=INTEGER},
      driver_id = #{driverId,jdbcType=INTEGER},
      car_number = #{carNumber,jdbcType=VARCHAR},
      business_scope = #{businessScope,jdbcType=VARCHAR},
      operate_number = #{operateNumber,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      traffic_level = #{trafficLevel,jdbcType=VARCHAR},
      traffic_owner = #{trafficOwner,jdbcType=VARCHAR},
      owner_tel = #{ownerTel,jdbcType=VARCHAR},
      driving_license = #{drivingLicense,jdbcType=DATE},
      trading_license = #{tradingLicense,jdbcType=DATE},
      operating_license = #{operatingLicense,jdbcType=DATE},
      approval_license = #{approvalLicense,jdbcType=DATE},
      evaluation_license = #{evaluationLicense,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>